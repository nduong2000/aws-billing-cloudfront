name: Deploy Medical Billing Frontend to AWS CloudFront

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  AWS_REGION: us-east-1
  S3_BUCKET: medical-billing-frontend-202505251250
  CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests (if any)
      run: npm test --if-present

    - name: Build application
      run: npm run build

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Deploy to S3
      run: |
        aws s3 sync dist/ s3://${{ env.S3_BUCKET }} --delete --cache-control "max-age=31536000" --exclude "*.html"
        aws s3 sync dist/ s3://${{ env.S3_BUCKET }} --delete --cache-control "max-age=0, no-cache, no-store, must-revalidate" --include "*.html"

    - name: Invalidate CloudFront cache
      if: env.CLOUDFRONT_DISTRIBUTION_ID != ''
      run: |
        aws cloudfront create-invalidation --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

    - name: Deploy summary
      run: |
        echo "üéâ Deployment completed successfully!"
        echo "üì± S3 Website: http://${{ env.S3_BUCKET }}.s3-website-${{ env.AWS_REGION }}.amazonaws.com"
        if [ -n "${{ env.CLOUDFRONT_DISTRIBUTION_ID }}" ]; then
          echo "üåê CloudFront: https://$(aws cloudfront get-distribution --id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} --query 'Distribution.DomainName' --output text)"
        fi 